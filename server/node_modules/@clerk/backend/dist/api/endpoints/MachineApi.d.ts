import type { PaginatedResourceResponse } from '../resources/Deserializer';
import type { Machine } from '../resources/Machine';
import { AbstractAPI } from './AbstractApi';
type CreateMachineParams = {
    name: string;
};
type UpdateMachineParams = {
    machineId: string;
    name: string;
};
type GetMachineListParams = {
    limit?: number;
    offset?: number;
    query?: string;
};
export declare class MachineApi extends AbstractAPI {
    get(machineId: string): Promise<Machine>;
    list(queryParams?: GetMachineListParams): Promise<PaginatedResourceResponse<Machine[]>>;
    create(bodyParams: CreateMachineParams): Promise<Machine>;
    update(params: UpdateMachineParams): Promise<Machine>;
    delete(machineId: string): Promise<Machine>;
}
export {};
//# sourceMappingURL=MachineApi.d.ts.map